{"version":3,"file":"static/js/983.e08e2c11.chunk.js","mappings":"kXAIaA,EAAUC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sJASnBC,EAAOH,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wEAMfG,EAAaL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oMAcvBK,EAAUP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uDAKpBO,EAAgBT,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,6FAO1BS,EAAYX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iJAStBW,GAAab,EAAAA,EAAAA,IAAOc,EAAAA,IAAPd,CAAmBe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,gDAKhCc,EAAYhB,EAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,+GAOtBgB,GAAWlB,EAAAA,EAAAA,IAAOmB,EAAAA,IAAPnB,CAA+BoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,kQ,SCkCvD,EAxEiB,WACf,IAAMmB,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,IAE7BC,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,IAEhCI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,WACfC,OAAOC,QAAU,IACnBJ,GAAc,GAEdA,GAAc,EAElB,EAGA,OAFAG,OAAOE,iBAAiB,SAAUH,GAE3B,WACLC,OAAOG,oBAAoB,SAAUJ,EACvC,CACF,GAAG,IAaH,OAJAD,EAAAA,EAAAA,YAAU,WACRb,GAASmB,EAAAA,EAAAA,MACX,GAAG,CAACnB,KAGFoB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAF,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,yCAETC,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAAAH,UACNC,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CAAAJ,UACRF,EAAAA,EAAAA,MAACpC,EAAU,CAAAsC,SAAA,EACTF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAC7C,EAAO,CAAA4C,SAAC,kBAERjB,EAASsB,OAAS,GACjBP,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACzB,EAAS,CAAA2B,SAAA,EACRC,EAAAA,EAAAA,KAAC/B,EAAU,KACX+B,EAAAA,EAAAA,KAACK,EAAAA,GAAW,OAEb1B,GAAQqB,EAAAA,EAAAA,KAACM,EAAAA,GAAK,KAAMN,EAAAA,EAAAA,KAACO,EAAAA,GAAW,QAGnCP,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+CAGPC,EAAAA,EAAAA,KAACrC,EAAO,KACRkC,EAAAA,EAAAA,MAAChC,EAAa,CAAAkC,SAAA,EACZC,EAAAA,EAAAA,KAACjC,EAAS,CAACyC,IAAKC,KAChBT,EAAAA,EAAAA,KAACzC,EAAI,CAAAwC,SAAC,6BACNC,EAAAA,EAAAA,KAACU,EAAAA,EAAW,cAMnBtB,IAAcY,EAAAA,EAAAA,KAAC1B,EAAQ,CAACqC,QA5CT,WAClBnB,OAAOoB,SAAS,CACdC,IAAK,EACLC,SAAU,UAEd,MA0CF,C","sources":["pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport { BsFillArrowUpCircleFill } from 'react-icons/bs';\n\nexport const Heading = styled.h1`\n  color: gray;\n  font-size: 2rem;\n  text-transform: uppercase;\n  letter-spacing: 0.2rem;\n  font-weight: 500;\n  margin: 1rem 0 2.6rem;\n`;\n\nexport const Text = styled.p`\n  color: #a06cd5;\n  font-weight: 500;\n  font-size: 1.2rem;\n`;\n\nexport const StyledBook = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  gap: 20px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n\n  @media (min-width: 1200px) {\n    gap: 50px;\n  }\n`;\n\nexport const Divider = styled.div`\n  background-color: #f4f4f2;\n  width: 2px;\n`;\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const StyledImg = styled.img`\n  width: auto;\n  height: 200px;\n  object-fit: contain;\n  border-radius: 50%;\n  background-color: #f4f4f2;\n  margin-bottom: 1rem;\n`;\n\nexport const IconSearch = styled(BiSearchAlt)`\n  font-size: 1.5rem;\n  color: gray;\n`;\n\nexport const StyledBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 2rem 0 1rem;\n`;\n\nexport const ButtonUp = styled(BsFillArrowUpCircleFill)`\n  position: fixed;\n  right: 20px;\n  bottom: 20px;\n  z-index: 999;\n  font-size: 2.5rem;\n  color: #a06cd5;\n  transition: transform 0.3s ease-in;\n\n  &:hover {\n    color: #fb8e5d;\n    transform: translateY(-10px);\n    cursor: pointer;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport {\n  Error,\n  Container,\n  Content,\n  ContactForm,\n  ContactList,\n  FilterInput,\n} from 'components';\nimport { selectError, selectContacts } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport photo from 'images/contacts.png';\nimport {\n  Heading,\n  Text,\n  StyledBook,\n  Divider,\n  StyledWrapper,\n  StyledBox,\n  IconSearch,\n  StyledImg,\n  ButtonUp,\n} from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  const [showButton, setShowButton] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > 300) {\n        setShowButton(true);\n      } else {\n        setShowButton(false);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook App - Your contact list</title>\n      </Helmet>\n      <Content>\n        <Container>\n          <StyledBook>\n            <div>\n              <Heading>Your Contacts</Heading>\n\n              {contacts.length > 0 ? (\n                <>\n                  <StyledBox>\n                    <IconSearch />\n                    <FilterInput />\n                  </StyledBox>\n                  {error ? <Error /> : <ContactList />}\n                </>\n              ) : (\n                <p>It's so empty here! Add some contacts.</p>\n              )}\n            </div>\n            <Divider />\n            <StyledWrapper>\n              <StyledImg src={photo} />\n              <Text>Add a new contact here:</Text>\n              <ContactForm />\n            </StyledWrapper>\n          </StyledBook>\n        </Container>\n      </Content>\n\n      {showButton && <ButtonUp onClick={scrollToTop} />}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Heading","styled","_templateObject","_taggedTemplateLiteral","Text","_templateObject2","StyledBook","_templateObject3","Divider","_templateObject4","StyledWrapper","_templateObject5","StyledImg","_templateObject6","IconSearch","BiSearchAlt","_templateObject7","StyledBox","_templateObject8","ButtonUp","BsFillArrowUpCircleFill","_templateObject9","dispatch","useDispatch","error","useSelector","selectError","contacts","selectContacts","_useState","useState","_useState2","_slicedToArray","showButton","setShowButton","useEffect","handleScroll","window","scrollY","addEventListener","removeEventListener","fetchContacts","_jsxs","_Fragment","children","_jsx","Helmet","Content","Container","length","FilterInput","Error","ContactList","src","photo","ContactForm","onClick","scrollTo","top","behavior"],"sourceRoot":""}